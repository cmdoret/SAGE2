# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="name",y="oddratios"))+geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + geom_hline(aes_string(yintercept=1)) + facet_grid(~term_type)
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
library(gridExtra)
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="name",y="oddratios"))+geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + geom_hline(aes_string(yintercept=1)) + facet_grid(~term_type, drop=T)
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="name",y="oddratios"))+geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + geom_hline(aes_string(yintercept=1)) + facet_grid(~term_type, drop=T)
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="name",y="oddratios"))+geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, scales='free', drop=T)
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="name",y="log(oddratios)"))+geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, scales='free', drop=T)
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="name",y="log(oddratios)"))+geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, scales='free', drop=T) + theme_minimal()
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="reorder(name,oddratios)",y="log(oddratios)"))+geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, scales='free', drop=T) + theme_minimal()
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="reorder(name,oddratios)",y="log(oddratios)"))+geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, scales='free', drop=T) + theme_minimal()
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="reorder(name,oddratios)",y="log(oddratios)"))+geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + axis.text.x = element_text(angle = 90, hjust = 1)
bp <- bp + geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, scales='free', drop=T)
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="reorder(name,oddratios)",y="log(oddratios)"))+geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + axis.text.x = element_text(angle = 90, hjust = 1)
bp <- bp + geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, scales='free', drop=T)
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="reorder(name,oddratios)",y="log(oddratios)")) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, scales='free', drop=T)
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
cropannot <- list(metabolic process=0)
cropannot <- list("metabolic process"=0)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
tmp_table$names <- apply(tmp_table,MARGIN = 1,function(r) gsub())
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="reorder(acc,oddratios)",y="log(oddratios)")) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, scales='free', drop=T)
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="reorder(acc,oddratios)",y="log(oddratios)")) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, scales='free', drop=T)
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="reorder(acc,oddratios)",y="log(oddratios)")) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, scales='free', drop=T)
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="reorder(acc,oddratios)",y="log(oddratios)")) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, scales='free', drop=T)
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes_string(x="reorder(acc,oddratios)",y="log(oddratios)",fill="qval")) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, scales='free', drop=T)
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
clean_labels <- c(molecular_function='Molecular function', cellular_component='Cellular component',
biological_process='Biological process')
bp <- ggplot(data=tmp_table, aes_string(x="reorder(acc,oddratios)",y="log(oddratios)",fill="qval")) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
clean_labels <- c(molecular_function='Molecular function', cellular_component='Cellular component',
biological_process='Biological process')
bp <- ggplot(data=tmp_table, aes_string(x="reorder(acc,oddratios)",y="log(oddratios)",fill="qval")) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
geom_hline(aes_string(yintercept=1)) + facet_wrap(~term_type, drop=T, labeller = as_labeller(clean_labels))
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
clean_labels <- c(molecular_function='Molecular function', cellular_component='Cellular component',
biological_process='Biological process')
bp <- ggplot(data=tmp_table, aes_string(x="reorder(acc,oddratios)",y="log(oddratios)",fill="qval")) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
geom_hline(aes_string(yintercept=0)) + facet_wrap(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
GOcbar(in_folder)
GOcbar <- function(GO_folder){
# Producing a series of barplots from a folder as input.
# Each file in the folder (host grou) will be in a separate a barplot
# Each Significantly enriched/depleted GO term will be a bar in the barplot
files <- list.files(GO_folder)  # Getting all files in input folder
plotlist <- list()  # Initializing list that will store plots for all groups
for(f in files[2:length(files)]){  # Iterating over all files (besides the first one)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
rownames(tmp_table) <- NULL  # Resetting row indices
clean_labels <- c(molecular_function='Molecular function', cellular_component='Cellular component',
biological_process='Biological process')
bp <- ggplot(data=tmp_table, aes_string(x="reorder(acc,oddratios)",y="log(oddratios)",fill="qval")) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
geom_hline(aes_string(yintercept=0)) + facet_wrap(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
#bp <- bp + theme(title=group_name)
# Adding a line to mark 1 (below-> depleted, above -> enriched)
plotlist[[group_name]] <- bp
}
grid.arrange(grobs = plotlist, nrow=length(files))
}
