tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
tmp_table <- tmp_table[order(tmp_table$oddratios),]  # Sorting by oddratio
# Extracting most enriched gene for each term type (used to add labels on graph)
# Initiating empty table to contain rows that need to be labelled
label_table <- data.frame(term_type=numeric(0),name=numeric(0),
acc=numeric(0),oddratios=numeric(0),qval=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
label_table<- rbind(label_table, term_rows[term_rows$oddratios==max(term_rows$oddratios),
c('term_type','name','acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
View(tmp_table)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
tmp_table <- read.table(paste(in_folder,f,sep='/'), header=TRUE, sep='\t')
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
tmp_table <- tmp_table[order(tmp_table$oddratios),]  # Sorting by oddratio
# Extracting most enriched gene for each term type (used to add labels on graph)
# Initiating empty table to contain rows that need to be labelled
label_table <- data.frame(term_type=numeric(0),name=numeric(0),
acc=numeric(0),oddratios=numeric(0),qval=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
label_table<- rbind(label_table, term_rows[term_rows$oddratios==max(term_rows$oddratios),
c('term_type','name','acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
GO_folder=in_folder
f=files[2]
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
tmp_table <- tmp_table[order(tmp_table$oddratios),]  # Sorting by oddratio
# Extracting most enriched gene for each term type (used to add labels on graph)
# Initiating empty table to contain rows that need to be labelled
label_table <- data.frame(term_type=numeric(0),name=numeric(0),
acc=numeric(0),oddratios=numeric(0),qval=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
label_table<- rbind(label_table, term_rows[term_rows$oddratios==max(term_rows$oddratios),
c('term_type','name','acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
bp <- ggplot(data=tmp_table, aes(x=reorder(acc),y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
bp <- ggplot(data=tmp_table, aes(x=acc[order(acc)],y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
bp <- ggplot(data=tmp_table, aes(x=acc[order(acc)],y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc[order(acc)],
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below
bp
label_table
bp <- ggplot(data=tmp_table, aes(x=acc[order(acc)],y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc[order(tmp_table$acc)],
y=1.1*log10(oddratios)))
bp
bp <- ggplot(data=tmp_table, aes(y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc[order(tmp_table$acc)],
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
bp
bp <- ggplot(data=tmp_table, aes(y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
bp <- ggplot(data=tmp_table, aes(x='',y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
b√®
bp
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
term_rows$name[term_rows$oddratios<max(term_rows$oddratios)] <- ''
label_table<- rbind(label_table, term_rows[,c('term_type','name',
'acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
term_rows$name <- as.character(term_rows$name)
term_rows$name[term_rows$oddratios<max(term_rows$oddratios)] <- ''
label_table<- rbind(label_table, term_rows[,c('term_type','name',
'acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
tmp_tableacc[order(acc)]
tmp_table$acc[order(tmp_table$acc)]
bp <- ggplot(data=tmp_table, aes(x=acc[order(oddratios)],y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc[order(oddratios)],
y=1.1*log10(oddratios)))
bp
llabel
label_table
label_table <- data.frame(term_type=numeric(0),name=numeric(0),
acc=numeric(0),oddratios=numeric(0),qval=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
term_rows$name <- as.character(term_rows$name)
term_rows$name[term_rows$oddratios<max(term_rows$oddratios)] <- ''
label_table<- rbind(label_table, term_rows[,c('term_type','name',
'acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
label_table
View(tmp_table)
View(tmp_table)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
tmp_table <- tmp_table[order(tmp_table$oddratios),]  # Sorting by oddratio
View(tmp_table)
rownames(tmp_table) <- NULL  # Resetting row indices
label_table <- data.frame(term_type=numeric(0),name=numeric(0),
acc=numeric(0),oddratios=numeric(0),qval=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
term_rows$name <- as.character(term_rows$name)
term_rows$name[term_rows$oddratios<max(term_rows$oddratios)] <- ''
label_table<- rbind(label_table, term_rows[,c('term_type','name',
'acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
tmp_table
label_table
bp <- ggplot(data=tmp_table, aes(x=acc[order(oddratios)],y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc[order(oddratios)],
y=1.1*log10(oddratios)))
bp
tmp_table$acc[order(tmp_table$oddratios)]
View(tmp_table)
bp <- ggplot(data=tmp_table, aes(x=acc[order(log10(oddratios))],y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc[order(oddratios)],
y=1.1*log10(oddratios)))
bp
bp <- ggplot(data=tmp_table, aes(x=reorder(acc, oddratios),y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=reorder(acc, oddratios),
y=1.1*log10(oddratios)))
bp
bp <- ggplot(data=tmp_table, aes(x=reorder(acc, oddratios),y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_label(data=label_table,aes(label=name, x=reorder(acc, oddratios),
y=1.1*log10(oddratios)))
bp
bp <- ggplot(data=tmp_table, aes(x=reorder(acc, oddratios),y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=reorder(acc, oddratios),
y=1.1*log10(oddratios))) + xlab("GO terms") + ylab("Odds ratio")
# Adding a line t
bp
library(ggplot2)
library(gridExtra)
sessionInfo()
path <- '../data/frequencies/'
groups <- c('B','H')
for(f in  paste0(path,groups)){
f
}
print(f)
for(f in  paste0(path,groups)){
print(f)
}
for(f in  paste0(path,groups,'_gfreq.txt')){
print(f)
}
data.frame(B=numeric(0),BH=numeric(0),H=numeric(0))
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- data.frame(B=numeric(0),BH=numeric(0),H=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f)
gr_freq <- gr_freq-mean(gr_freq)/sd(gr_freq)
store_freq[,group[i]] <- gr_freq
i <- i +1
}
gr_freq <-scan(f,sep = ',')
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- data.frame(B=numeric(0),BH=numeric(0),H=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
gr_freq <- gr_freq-mean(gr_freq)/sd(gr_freq)
store_freq[,group[i]] <- gr_freq
i <- i +1
}
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- data.frame(B=numeric(0),BH=numeric(0),H=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
gr_freq <- gr_freq-mean(gr_freq)/sd(gr_freq)
store_freq[,groups[i]] <- gr_freq
i <- i +1
}
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- data.frame(B=numeric(0),BH=numeric(0),H=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
gr_freq <- (gr_freq-mean(gr_freq))/sd(gr_freq)
store_freq[,groups[i]] <- gr_freq
i <- i +1
}
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- data.frame(B=numeric(0),BH=numeric(0),H=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
print(gr_freq)
gr_freq <- (gr_freq-mean(gr_freq))/sd(gr_freq)
store_freq[,groups[i]] <- gr_freq
i <- i +1
}
y <- c(1,2,3)
y-mean(y
)
(y-mean(y))/sd(y)
groups[i]
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- list(B=numeric(0),BH=numeric(0),H=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
print(gr_freq)
gr_freq <- (gr_freq-mean(gr_freq))/sd(gr_freq)
store_freq[[,groups[i]]] <- gr_freq
i <- i +1
}
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- list(B=numeric(0),BH=numeric(0),H=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
print(gr_freq)
gr_freq <- (gr_freq-mean(gr_freq))/sd(gr_freq)
store_freq[[groups[i]]] <- gr_freq
i <- i +1
}
gr_freq
for(i in store_freq){print(i)}
for(i in names(store_freq)){print(i)}
len(gr_freq)
len(gr_freq)
length(gr_freq)
length(unlist(gr_freq))
length(gr_freq$B)
length(store_freq)
length(unlist(store_freq))
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- list(B=numeric(0),BH=numeric(0),H=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
gr_freq <- (gr_freq-mean(gr_freq))/sd(gr_freq)
data.frame(group = groups[i], freq = gr_freq))
i <- i +1
}
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
gr_freq <- (gr_freq-mean(gr_freq))/sd(gr_freq)
data.frame(group = groups[i], freq = gr_freq))
i <- i +1
}
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- list(B=numeric(0),BH=numeric(0),H=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
gr_freq <- (gr_freq-mean(gr_freq))/sd(gr_freq)
data.frame(group = groups[i], freq = gr_freq)
i <- i +1
}
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
gr_freq <- (gr_freq-mean(gr_freq))/sd(gr_freq)
df <- data.frame(group = groups[i], freq = gr_freq)
i <- i +1
}
View(df)
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- list(group=numeric(0),freq=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
gr_freq <- (gr_freq-mean(gr_freq))/sd(gr_freq)
df <- data.frame(freq = gr_freq)
df$group <- groups[i]
store_freq <- rbind(store_freq, df)
i <- i +1
}
View(store_freq)
anova(aov(store_freq, formula = freq~group))
aov(store_freq, formula = freq~group)
aov(store_freq, formula = freq ~ group)
plot(aov(store_freq, formula = freq ~ group))
plot(aov(store_freq, formula = freq ~ group))
boxplot(store_freq$freq~store_freq$group)
View(store_freq)
t.test(store_freq$freq[store_freq$group=='BH'], store_freq$freq[store_freq$group=='B'])
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- list(group=numeric(0),freq=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
gr_freq <- gr_freq/max(gr_freq)
df <- data.frame(freq = gr_freq)
df$group <- groups[i]
store_freq <- rbind(store_freq, df)
i <- i +1
}
plot(aov(store_freq, formula = freq ~ group))
boxplot(store_freq$freq~store_freq$group)
t.test(store_freq$freq[store_freq$group=='BH'], store_freq$freq[store_freq$group=='B'])
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- list(group=numeric(0),freq=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
gr_freq <- gr_freq/max(gr_freq)
df <- data.frame(freq = gr_freq)
df$group <- groups[i]
store_freq <- rbind(store_freq, df)
i <- i +1
}
plot(aov(store_freq, formula = freq ~ group))
t.test(store_freq$freq[store_freq$group=='BH'], store_freq$freq[store_freq$group=='B'])
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- list(group=numeric(0),freq=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
gr_freq <- gr_freq
df <- data.frame(freq = gr_freq)
df$group <- groups[i]
store_freq <- rbind(store_freq, df)
i <- i +1
}
plot(aov(store_freq, formula = freq ~ group))
t.test(store_freq$freq[store_freq$group=='BH'], store_freq$freq[store_freq$group=='B'])
aov(store_freq, formula = freq ~ group)
summary(aov(store_freq, formula = freq ~ group))
anov <- aov(store_freq, formula = freq ~ group)
summary(anov)
TukeyHSD(anov)
wilcox.test(store_freq$freq[store_freq$group=='BH'], store_freq$freq[store_freq$group=='B'])
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- list(group=numeric(0),freq=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
gr_freq <- gr_freq/max(gr_freq)
df <- data.frame(freq = gr_freq)
df$group <- groups[i]
store_freq <- rbind(store_freq, df)
i <- i +1
}
plot(aov(store_freq, formula = freq ~ group))
wilcox.test(store_freq$freq[store_freq$group=='BH'], store_freq$freq[store_freq$group=='B'])
plot(density(store(freq)))
plot(density(store_freq$freq)))
plot(density(store_freq$freq))
plot(density(store_freq$freq[store_freq$group=="B"]))
abline(density(store_freq$freq[store_freq$group=="BH"]))
lines(density(store_freq$freq[store_freq$group=="BH"]))
lines(density(store_freq$freq[store_freq$group=="H"]))
plot(density(store_freq$freq[store_freq$group=="H"]),col='orange')
lines(density(store_freq$freq[store_freq$group=="BH"]),col='green')
lines(density(store_freq$freq[store_freq$group=="B"]),col='blue')
wilcox.test(store_freq$freq[store_freq$group=='H'], store_freq$freq[store_freq$group=='B'])
path <- '../data/frequencies/'
groups <- c('B','BH','H')
store_freq <- list(group=numeric(0),freq=numeric(0))
i<- 1
for(f in  paste0(path,groups,'_gfreq.txt')){
gr_freq <-scan(f,sep = ',')
gr_freq <- gr_freq
df <- data.frame(freq = gr_freq)
df$group <- groups[i]
store_freq <- rbind(store_freq, df)
i <- i +1
}
wilcox.test(store_freq$freq[store_freq$group=='H'], store_freq$freq[store_freq$group=='B'])
