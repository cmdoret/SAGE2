group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
group_name
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
tmp_table
rownames(tmp_table) <- NULL
tmp_table
tmp_table <- tmp_table[order(tmp_table$oddratios),]
tmp_table
tmp_table <- read.table(paste(in_folder,f,sep='/'), header=TRUE, sep='\t')
tmp_table[order(tmp_table$oddratios),]
tmp_table[reorder(tmp_table$oddratios),]
tmp_table <- tmp_table[order(tmp_table$oddratios),]
rownames(tmp_table) <- NULL
tmp_table
tmp_table$name[tmp_table$oddratios==max(tmp_table$oddratios)]
by(tmp_table,INDICES = term_type,meman)
by(tmp_table,INDICES = term_type,mean)
head(tmp_table)
by(tmp_table,INDICES = tmp_table$term_type,mean)
by(tmp_table$oddratios,INDICES = tmp_table$term_type,mean)
unlist(by(tmp_table$oddratios,INDICES = tmp_table$term_type,mean))
str(by(tmp_table$oddratios,INDICES = tmp_table$term_type,mean))
as.vector(by(tmp_table$oddratios,INDICES = tmp_table$term_type,mean))
str(by(tmp_table$oddratios,INDICES = tmp_table$term_type,max))
as.vector(by(tmp_table$oddratios,INDICES = tmp_table$term_type,max))
as.vector(by(tmp_table,INDICES = tmp_table$term_type,max))
as.vector(by(tmp_table$name,INDICES = tmp_table$term_type,max))
as.vector(by(tmp_table$oddratios,INDICES = tmp_table,max))
by(tmp_table$oddratios,INDICES = tmp_table,max)
by(tmp_table$oddratios,INDICES = tmp_table,max)
as.data.frame(by(tmp_table$oddratios,INDICES = tmp_table,max))
?by
by(tmp_table$oddratios,INDICES = tmp_table,max,simplify = F)
extrem_table <- as.vector(by(rownames(tmp_table),INDICES = tmp_table$term_type,max))
extrem_table <- as.vector(by(tmp_table$oddratios,INDICES = tmp_table$term_type,max))
extrem_table
aggregate(tmp_table$oddratios,tmp_table$term_type,max)
aggregate(tmp_table$oddratios,by=tmp_table$term_type,max)
aggregate(tmp_table$oddratios,by=list(tmp_table$term_type),max)
lapply(split(tmp_value,tmp_value$term_type))
len(levels(tmp_table$term_type))
length(levels(tmp_table$term_type))
label_init <- rep(NA,length(levels(tmp_table$term_type))
label_table <- data.frame(term_type=label_init,
oddratios=label_init,
acc=label_init)
label_init <- rep(NA,length(levels(tmp_table$term_type)))
label_table <- data.frame(term_type=label_init,
oddratios=label_init,
acc=label_init)
label_table
label_table <- data.frame(term_type=unique(tmp$term_type),
oddratios=label_init,
acc=label_init)
label_table <- data.frame(term_type=unique(tmp_table$term_type),
oddratios=label_init,
acc=label_init)
label_table
View(tmp_table)
label_init <- rep(NA,nrow(tmp_table))
extrem_table <- data.frame(term_type=numeric(0),acc=0,oddratios=numeric(0))
extrem_table <- data.frame(term_type=numeric(0),acc=numeric(0),oddratios=numeric(0))
label_table <- data.frame(term_type=numeric(0),acc=numeric(0),oddratios=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
label_table<- rbind(label_table, term_rows[term_rows$oddratios==max(term_rows$oddratios),
c('term_type','acc','oddratios')])
# For each term type, appending row(s) with highest enrichment value
}
label_both()
label_table
label_table <- data.frame(term_type=numeric(0),name=numeric(0),
acc=numeric(0),oddratios=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
label_table<- rbind(label_table, term_rows[term_rows$oddratios==max(term_rows$oddratios),
c('term_type','name','acc','oddratios')])
# For each term type, appending row(s) with highest enrichment value
}
label_table
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
annotate(label=label_table$name, geom = 'label',
x=label_table$acc,
y=log10(label_table$oddratios))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
label_table$acc
label_table$oddratios
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
annotate(data=label_table,label=label_table$name, geom = 'label',
x=label_table$acc,
y=log10(label_table$oddratios))
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
annotate(inherit_aes=F,data=label_table,label=label_table$name, geom = 'label',
x=label_table$acc,
y=log10(label_table$oddratios))
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(aes(label=label_table$name, geom = 'label',
x=label_table$acc,
y=log10(label_table$oddratios)))
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(aes(label=label_table$name, x=label_table$acc,
y=log10(label_table$oddratios)))
bp
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=log10(oddratios)))
bp
# Extracting most enriched gene for each term type (used to add labels on graph)
# Initiating empty table to contain rows that need to be labelled
label_table <- data.frame(term_type=numeric(0),name=numeric(0),
acc=numeric(0),oddratios=numeric(0),qval=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
label_table<- rbind(label_table, term_rows[term_rows$oddratios==max(term_rows$oddratios),
c('term_type','name','acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=log10(oddratios)))
bp
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
bp
bp <- ggplot(data=tmp_table, aes(x=order(acc),y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
bp
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
bp
f=files[2]
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
tmp_table <- tmp_table[order(tmp_table$oddratios),]  # Sorting by oddratio
# Extracting most enriched gene for each term type (used to add labels on graph)
# Initiating empty table to contain rows that need to be labelled
label_table <- data.frame(term_type=numeric(0),name=numeric(0),
acc=numeric(0),oddratios=numeric(0),qval=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
label_table<- rbind(label_table, term_rows[term_rows$oddratios==max(term_rows$oddratios),
c('term_type','name','acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
f=files[3]
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
tmp_table <- tmp_table[order(tmp_table$oddratios),]  # Sorting by oddratio
# Extracting most enriched gene for each term type (used to add labels on graph)
# Initiating empty table to contain rows that need to be labelled
label_table <- data.frame(term_type=numeric(0),name=numeric(0),
acc=numeric(0),oddratios=numeric(0),qval=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
label_table<- rbind(label_table, term_rows[term_rows$oddratios==max(term_rows$oddratios),
c('term_type','name','acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
tmp_table <- tmp_table[order(tmp_table$oddratios),]  # Sorting by oddratio
# Extracting most enriched gene for each term type (used to add labels on graph)
# Initiating empty table to contain rows that need to be labelled
label_table <- data.frame(term_type=numeric(0),name=numeric(0),
acc=numeric(0),oddratios=numeric(0),qval=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
label_table<- rbind(label_table, term_rows[term_rows$oddratios==max(term_rows$oddratios),
c('term_type','name','acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
View(tmp_table)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
tmp_table <- read.table(paste(in_folder,f,sep='/'), header=TRUE, sep='\t')
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
tmp_table <- tmp_table[order(tmp_table$oddratios),]  # Sorting by oddratio
# Extracting most enriched gene for each term type (used to add labels on graph)
# Initiating empty table to contain rows that need to be labelled
label_table <- data.frame(term_type=numeric(0),name=numeric(0),
acc=numeric(0),oddratios=numeric(0),qval=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
label_table<- rbind(label_table, term_rows[term_rows$oddratios==max(term_rows$oddratios),
c('term_type','name','acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
GO_folder=in_folder
f=files[2]
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
# Temporary table is read from file
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
# Removing annotations with infinite odd ratios, caused by 0's in contingency table
# (i.e. GO term only in one group)
tmp_table <- tmp_table[order(tmp_table$oddratios),]  # Sorting by oddratio
# Extracting most enriched gene for each term type (used to add labels on graph)
# Initiating empty table to contain rows that need to be labelled
label_table <- data.frame(term_type=numeric(0),name=numeric(0),
acc=numeric(0),oddratios=numeric(0),qval=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
label_table<- rbind(label_table, term_rows[term_rows$oddratios==max(term_rows$oddratios),
c('term_type','name','acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
rownames(tmp_table) <- NULL  # Resetting row indices
bp <- ggplot(data=tmp_table, aes(x=acc,y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
bp <- ggplot(data=tmp_table, aes(x=reorder(acc),y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
bp <- ggplot(data=tmp_table, aes(x=acc[order(acc)],y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
bp <- ggplot(data=tmp_table, aes(x=acc[order(acc)],y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc[order(acc)],
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below
bp
label_table
bp <- ggplot(data=tmp_table, aes(x=acc[order(acc)],y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc[order(tmp_table$acc)],
y=1.1*log10(oddratios)))
bp
bp <- ggplot(data=tmp_table, aes(y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc[order(tmp_table$acc)],
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
bp
bp <- ggplot(data=tmp_table, aes(y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bp
bp <- ggplot(data=tmp_table, aes(x='',y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc,
y=1.1*log10(oddratios)))
# Adding a line to mark 1 (below-> depleted, above -> enriched)
bè
bp
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
term_rows$name[term_rows$oddratios<max(term_rows$oddratios)] <- ''
label_table<- rbind(label_table, term_rows[,c('term_type','name',
'acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
term_rows$name <- as.character(term_rows$name)
term_rows$name[term_rows$oddratios<max(term_rows$oddratios)] <- ''
label_table<- rbind(label_table, term_rows[,c('term_type','name',
'acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
tmp_tableacc[order(acc)]
tmp_table$acc[order(tmp_table$acc)]
bp <- ggplot(data=tmp_table, aes(x=acc[order(oddratios)],y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc[order(oddratios)],
y=1.1*log10(oddratios)))
bp
llabel
label_table
label_table <- data.frame(term_type=numeric(0),name=numeric(0),
acc=numeric(0),oddratios=numeric(0),qval=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
term_rows$name <- as.character(term_rows$name)
term_rows$name[term_rows$oddratios<max(term_rows$oddratios)] <- ''
label_table<- rbind(label_table, term_rows[,c('term_type','name',
'acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
label_table
View(tmp_table)
View(tmp_table)
tmp_table <- read.table(paste(GO_folder,f,sep='/'), header=TRUE, sep='\t')
group_name <- strsplit(x = f,split = '_',fixed = T)[[1]][1] # Adding group column
tmp_table <- tmp_table[is.finite(tmp_table$oddratios),]
tmp_table <- tmp_table[order(tmp_table$oddratios),]  # Sorting by oddratio
View(tmp_table)
rownames(tmp_table) <- NULL  # Resetting row indices
label_table <- data.frame(term_type=numeric(0),name=numeric(0),
acc=numeric(0),oddratios=numeric(0),qval=numeric(0))
for(L in levels(tmp_table$term_type)){  # Iterating over term types
term_rows <- tmp_table[tmp_table$term_type==L,]  # Subsetting table
term_rows$name <- as.character(term_rows$name)
term_rows$name[term_rows$oddratios<max(term_rows$oddratios)] <- ''
label_table<- rbind(label_table, term_rows[,c('term_type','name',
'acc','oddratios','qval')])
# For each term type, appending row(s) with highest enrichment value
}
tmp_table
label_table
bp <- ggplot(data=tmp_table, aes(x=acc[order(oddratios)],y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc[order(oddratios)],
y=1.1*log10(oddratios)))
bp
tmp_table$acc[order(tmp_table$oddratios)]
View(tmp_table)
bp <- ggplot(data=tmp_table, aes(x=acc[order(log10(oddratios))],y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=acc[order(oddratios)],
y=1.1*log10(oddratios)))
bp
bp <- ggplot(data=tmp_table, aes(x=reorder(acc, oddratios),y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=reorder(acc, oddratios),
y=1.1*log10(oddratios)))
bp
bp <- ggplot(data=tmp_table, aes(x=reorder(acc, oddratios),y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_label(data=label_table,aes(label=name, x=reorder(acc, oddratios),
y=1.1*log10(oddratios)))
bp
bp <- ggplot(data=tmp_table, aes(x=reorder(acc, oddratios),y=log10(oddratios),fill=qval)) +
geom_bar(stat="identity")
# Using ggplot to produce barplots facetted by group. Barplots measure odd ratios of different annotations
bp <- bp + theme_minimal() + theme(axis.text.x = element_blank()) +
facet_grid(~term_type, scales='free', drop=T, labeller = as_labeller(clean_labels))
bp <- bp + geom_hline(aes(yintercept=0)) + ggtitle(group_name) +
geom_text(data=label_table,aes(label=name, x=reorder(acc, oddratios),
y=1.1*log10(oddratios))) + xlab("GO terms") + ylab("Odds ratio")
# Adding a line t
bp
library(ggplot2)
library(gridExtra)
sessionInfo()
